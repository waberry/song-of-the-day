{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file:///home/berry/Development/song-of-the-day/src/env.js"],"sourcesContent":["import { createEnv } from \"@t3-oss/env-nextjs\";\nimport { z } from \"zod\";\n\nexport const env = createEnv({\n  /**\n   * Specify your server-side environment variables schema here. This way you can ensure the app\n   * isn't built with invalid env vars.\n   */\n  server: {\n    DATABASE_URL: z.string().url(),\n    NODE_ENV: z\n      .enum([\"development\", \"test\", \"production\"])\n      .default(\"development\"),\n    SPOTIFY_CLIENT_ID: z.string(),\n    SPOTIFY_CLIENT_SECRET: z.string(),\n    NEXTAUTH_URL: z.string().url(),\n    NEXTAUTH_SECRET: z.string(),\n  },\n\n  /**\n   * Specify your client-side environment variables schema here. This way you can ensure the app\n   * isn't built with invalid env vars. To expose them to the client, prefix them with\n   * `NEXT_PUBLIC_`.\n   */\n  client: {\n    // NEXT_PUBLIC_CLIENTVAR: z.string(),\n  },\n\n  /**\n   * You can't destruct `process.env` as a regular object in the Next.js edge runtimes (e.g.\n   * middlewares) or client-side so we need to destruct manually.\n   */\n  runtimeEnv: {\n    DATABASE_URL: process.env.DATABASE_URL,\n    NODE_ENV: process.env.NODE_ENV,\n    SPOTIFY_CLIENT_ID: process.env.SPOTIFY_CLIENT_ID,\n    SPOTIFY_CLIENT_SECRET: process.env.SPOTIFY_CLIENT_SECRET,\n    NEXTAUTH_URL: process.env.NEXTAUTH_URL,\n    NEXTAUTH_SECRET: process.env.NEXTAUTH_SECRET,\n  },\n  /**\n   * Run `build` or `dev` with `SKIP_ENV_VALIDATION` to skip env validation. This is especially\n   * useful for Docker builds.\n   */\n  skipValidation: !!process.env.SKIP_ENV_VALIDATION,\n  /**\n   * Makes it so that empty strings are treated as undefined. `SOME_VAR: z.string()` and\n   * `SOME_VAR=''` will throw an error.\n   */\n  emptyStringAsUndefined: true,\n});\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,MAAM,MAAM,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD,EAAE;IAC3B;;;GAGC,GACD,QAAQ;QACN,cAAc,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG;QAC5B,UAAU,oIAAA,CAAA,IAAC,CACR,IAAI,CAAC;YAAC;YAAe;YAAQ;SAAa,EAC1C,OAAO,CAAC;QACX,mBAAmB,oIAAA,CAAA,IAAC,CAAC,MAAM;QAC3B,uBAAuB,oIAAA,CAAA,IAAC,CAAC,MAAM;QAC/B,cAAc,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG;QAC5B,iBAAiB,oIAAA,CAAA,IAAC,CAAC,MAAM;IAC3B;IAEA;;;;GAIC,GACD,QAAQ;IAER;IAEA;;;GAGC,GACD,YAAY;QACV,cAAc,QAAQ,GAAG,CAAC,YAAY;QACtC,QAAQ;QACR,mBAAmB,QAAQ,GAAG,CAAC,iBAAiB;QAChD,uBAAuB,QAAQ,GAAG,CAAC,qBAAqB;QACxD,cAAc,QAAQ,GAAG,CAAC,YAAY;QACtC,iBAAiB,QAAQ,GAAG,CAAC,eAAe;IAC9C;IACA;;;GAGC,GACD,gBAAgB,CAAC,CAAC,QAAQ,GAAG,CAAC,mBAAmB;IACjD;;;GAGC,GACD,wBAAwB;AAC1B"}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 142, "column": 0}, "map": {"version":3,"sources":["file:///home/berry/Development/song-of-the-day/src/app/api/auth/%5B...nextauth%5D/route.ts"],"sourcesContent":["import NextAuth from \"next-auth\";\nimport SpotifyProvider from \"next-auth/providers/spotify\";\nimport { env } from \"~/env\";\n\nconst scopes = [\n  \"user-read-email\",\n  \"playlist-read-private\",\n  \"playlist-read-collaborative\",\n  \"user-read-currently-playing\",\n  \"user-read-playback-state\",\n].join(\" \");\n\nconst authOptions = {\n  providers: [\n    SpotifyProvider({\n      clientId: env.SPOTIFY_CLIENT_ID,\n      clientSecret: env.SPOTIFY_CLIENT_SECRET,\n      authorization: {\n        params: { scope: scopes },\n      },\n    }),\n  ],\n  callbacks: {\n    async jwt({ token, account }) {\n      if (account) {\n        token.accessToken = account.access_token;\n        token.refreshToken = account.refresh_token;\n        token.expiresAt = account.expires_at;\n      }\n      return token;\n    },\n    async session({ session, token }) {\n      session.accessToken = token.accessToken;\n      session.refreshToken = token.refreshToken;\n      session.expiresAt = token.expiresAt;\n      return session;\n    },\n  },\n  pages: {\n    signIn: \"/auth/signin\",\n  },\n};\n\nconst handler = NextAuth(authOptions);\nexport { handler as GET, handler as POST }; "],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEA,MAAM,SAAS;IACb;IACA;IACA;IACA;IACA;CACD,CAAC,IAAI,CAAC;AAEP,MAAM,cAAc;IAClB,WAAW;QACT,CAAA,GAAA,oJAAA,CAAA,UAAe,AAAD,EAAE;YACd,UAAU,0GAAA,CAAA,MAAG,CAAC,iBAAiB;YAC/B,cAAc,0GAAA,CAAA,MAAG,CAAC,qBAAqB;YACvC,eAAe;gBACb,QAAQ;oBAAE,OAAO;gBAAO;YAC1B;QACF;KACD;IACD,WAAW;QACT,MAAM,KAAI,EAAE,KAAK,EAAE,OAAO,EAAE;YAC1B,IAAI,SAAS;gBACX,MAAM,WAAW,GAAG,QAAQ,YAAY;gBACxC,MAAM,YAAY,GAAG,QAAQ,aAAa;gBAC1C,MAAM,SAAS,GAAG,QAAQ,UAAU;YACtC;YACA,OAAO;QACT;QACA,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,QAAQ,WAAW,GAAG,MAAM,WAAW;YACvC,QAAQ,YAAY,GAAG,MAAM,YAAY;YACzC,QAAQ,SAAS,GAAG,MAAM,SAAS;YACnC,OAAO;QACT;IACF;IACA,OAAO;QACL,QAAQ;IACV;AACF;AAEA,MAAM,UAAU,CAAA,GAAA,qIAAA,CAAA,UAAQ,AAAD,EAAE"}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":["file:///home/berry/Development/song-of-the-day/src/app/_components/navbar/navbar.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/_components/navbar/navbar.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/_components/navbar/navbar.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAyS,GACtU,uEACA"}},
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 213, "column": 0}, "map": {"version":3,"sources":["file:///home/berry/Development/song-of-the-day/src/app/_components/navbar/navbar.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/_components/navbar/navbar.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/_components/navbar/navbar.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAqR,GAClT,mDACA"}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 227, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 231, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 237, "column": 0}, "map": {"version":3,"sources":["file:///home/berry/Development/song-of-the-day/src/app/_components/navbar/navbarWrapper.tsx"],"sourcesContent":["import { getServerSession } from \"next-auth/next\";\nimport { authOptions } from \"~/app/api/auth/[...nextauth]/route\";\nimport Navbar from \"./navbar\";\nimport { SessionProvider } from \"next-auth/react\";\n\nexport default async function NavbarWrapper() {\n  const session = await getServerSession(authOptions);\n  \n  return (\n    <SessionProvider session={session}>\n      <Navbar />\n    </SessionProvider>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;AAEe,eAAe;IAC5B,MAAM,UAAU,MAAM,CAAA,GAAA,6IAAA,CAAA,mBAAgB,AAAD,EAAE,wJAAA,CAAA,cAAW;IAElD,qBACE,8OAAC,8IAAA,CAAA,kBAAe;QAAC,SAAS;kBACxB,cAAA,8OAAC,8IAAA,CAAA,UAAM;;;;;;;;;;AAGb"}},
    {"offset": {"line": 265, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":["file:///home/berry/Development/song-of-the-day/src/trpc/react.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const TRPCReactProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call TRPCReactProvider() from the server but TRPCReactProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/trpc/react.tsx <module evaluation>\",\n    \"TRPCReactProvider\",\n);\nexport const api = registerClientReference(\n    function() { throw new Error(\"Attempted to call api() from the server but api is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/trpc/react.tsx <module evaluation>\",\n    \"api\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,oDACA;AAEG,MAAM,MAAM,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACrC;IAAa,MAAM,IAAI,MAAM;AAAsN,GACnP,oDACA"}},
    {"offset": {"line": 283, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 289, "column": 0}, "map": {"version":3,"sources":["file:///home/berry/Development/song-of-the-day/src/trpc/react.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const TRPCReactProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call TRPCReactProvider() from the server but TRPCReactProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/trpc/react.tsx\",\n    \"TRPCReactProvider\",\n);\nexport const api = registerClientReference(\n    function() { throw new Error(\"Attempted to call api() from the server but api is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/trpc/react.tsx\",\n    \"api\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,gCACA;AAEG,MAAM,MAAM,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACrC;IAAa,MAAM,IAAI,MAAM;AAAsN,GACnP,gCACA"}},
    {"offset": {"line": 301, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 307, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 311, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 317, "column": 0}, "map": {"version":3,"sources":["file:///home/berry/Development/song-of-the-day/src/app/layout.tsx"],"sourcesContent":["import \"~/styles/globals.css\";\n\nimport { GeistSans } from \"geist/font/sans\";\nimport { type Metadata } from \"next\";\nimport NavbarWrapper from \"src/app/_components/navbar/navbarWrapper\"\nimport { Inter } from \"next/font/google\";\n\nimport { TRPCReactProvider } from \"~/trpc/react\";\n\nexport const metadata: Metadata = {\n  title: \"Create T3 App\",\n  description: \"Generated by create-t3-app\",\n  icons: [{ rel: \"icon\", url: \"/favicon.ico\" }],\n};\n\nexport default function RootLayout({\n  children,\n}: Readonly<{ children: React.ReactNode }>) {\n  return (\n    <html lang=\"en\">\n      <body className={`${GeistSans.variable}`}>\n\n          <TRPCReactProvider>\n\n            <NavbarWrapper />\n\n              <main>\n                <>\n                  {children}\n                </>\n              </main>\n\n            </TRPCReactProvider>\n        </body>\n      </html>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AAEA;AAGA;AALA;;;;;;AAOO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;IACb,OAAO;QAAC;YAAE,KAAK;YAAQ,KAAK;QAAe;KAAE;AAC/C;AAEe,SAAS,WAAW,EACjC,QAAQ,EACgC;IACxC,qBACE,8OAAC;QAAK,MAAK;kBACT,cAAA,8OAAC;YAAK,WAAW,GAAG,2LAAA,CAAA,YAAS,CAAC,QAAQ,EAAE;sBAEpC,cAAA,8OAAC,qHAAA,CAAA,oBAAiB;;kCAEhB,8OAAC,qJAAA,CAAA,UAAa;;;;;kCAEZ,8OAAC;kCACC,cAAA;sCACG;;;;;;;;;;;;;;;;;;;;;;;AAQnB"}},
    {"offset": {"line": 379, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}
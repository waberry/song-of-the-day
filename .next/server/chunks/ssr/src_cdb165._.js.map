{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/berry/Development/song-of-the-day/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///home/berry/Development/song-of-the-day/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,sMAAM,UAAU,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file:///home/berry/Development/song-of-the-day/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,sMAAM,UAAU,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":["file:///home/berry/Development/song-of-the-day/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,sMAAM,UAAU,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,sMAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,sMAAM,UAAU,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":["file:///home/berry/Development/song-of-the-day/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AAGA;AAFA;AAHA;;;;;AAOA,MAAM,OAAO,iKAAc,IAAI;AAE/B,MAAM,yBAAW,sMAAM,UAAU,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAc,IAAI;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG,iKAAc,IAAI,CAAC,WAAW;AAErD,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAc,OAAO;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,iKAAc,OAAO,CAAC,WAAW;AAE3D,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAc,OAAO;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,iKAAc,OAAO,CAAC,WAAW"}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 246, "column": 0}, "map": {"version":3,"sources":["file:///home/berry/Development/song-of-the-day/src/utils/gameUtils.ts"],"sourcesContent":["import { faLeaf } from '@fortawesome/free-solid-svg-icons';\nimport { tuple } from 'zod';\n// import { getArtistsCountries } from '~/app/actions/musicbrainz';\n\n// Constants\nconst DURATION_THRESHOLD_MS = 1000;\nconst POPULARITY_THRESHOLD = 5;\nconst GENRE_SIMILARITIES = 1;\n\nexport enum ComparisonKey {\n  Artist = 'artists',\n  Album = 'album',\n  Year = 'year',\n  Decade = 'decade',\n  Genre = 'Genres',\n  Popularity = 'popularity',\n  Duration = 'duration',\n  ArtistCountry = 'country'\n}\n\nexport type ComparisonResult = {\n  [key in ComparisonKey]: {\n    result: boolean;\n    message: string;\n    selectedValue: string | number | string[];\n    dailyValue: string | number | string[];\n    comparison?: 'higher' | 'lower' | 'equal';\n  };\n};\n\n// Utility functions\nexport const removeDuplicates = (genres: string[] | undefined): string[] => \n  Array.from(new Set(genres?.map(genre => genre.trim().toLowerCase()) || []));\n\nconst formatDuration = (ms: number): string => {\n  const minutes = Math.floor(ms / 60000);\n  const seconds = Math.floor((ms % 60000) / 1000);\n  return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n};\n\nconst similarGenres = (selectedGenres: string[], dailyGenres: string[]): number => {\n  if (!selectedGenres || !dailyGenres)  return 0;\n  const dailyGenreSet = new Set(dailyGenres);\n  return selectedGenres.filter(genre => dailyGenreSet.has(genre)).length;\n};\n\n// Comparison functions\nconst compareArtists = (selectedArtists: any[], dailyArtists: []): ComparisonResult[ComparisonKey.Artist] => ({\n  result: selectedArtists.some(artist => dailyArtists.some(dailyArtist => dailyArtist.id === artist.id)),\n  message: `${selectedArtists[0].name}${selectedArtists.length > 1 ? ` ft. ${selectedArtists.slice(1).map(a => a.name).join(', ')}` : ''}`,\n  selectedValue: selectedArtists.map(a => a.name).join(', '),\n  dailyValue: dailyArtists.map(a => a.name).join(', '),\n});\n\nconst compareAlbums = (selectedAlbum: any, dailyAlbum: any): ComparisonResult[ComparisonKey.Album] => ({\n  result: selectedAlbum.id === dailyAlbum.id,\n  message: `Album: ${selectedAlbum.name}`,\n  selectedValue: selectedAlbum.name,\n  dailyValue: dailyAlbum.name,\n});\n\nconst compareYears = (selectedYear: number, dailyYear: number): ComparisonResult[ComparisonKey.Year] => ({\n  result: selectedYear === dailyYear,\n  message: selectedYear === dailyYear ? `Released in ${selectedYear}` : selectedYear < dailyYear ? `Go more recent (${selectedYear})` : `Go older (${selectedYear})`,\n  selectedValue: selectedYear,\n  dailyValue: dailyYear,\n  comparison: selectedYear === dailyYear ? 'equal' : selectedYear < dailyYear ? 'higher' : 'lower',\n});\n\nconst compareDecades = (selectedYear: number, dailyYear: number): ComparisonResult[ComparisonKey.Decade] => {\n  const selectedDecade = Math.floor(selectedYear / 10) * 10;\n  const dailyDecade = Math.floor(dailyYear / 10) * 10;\n  return {\n    result: selectedDecade === dailyDecade,\n    message: selectedDecade === dailyDecade ? `Same decade: ${selectedDecade}s` : selectedDecade < dailyDecade ? `Go to a later decade (${selectedDecade}s)` : `Go to an earlier decade (${selectedDecade}s)`,\n    selectedValue: `${selectedDecade}s`,\n    dailyValue: `${dailyDecade}s`,\n    comparison: selectedDecade === dailyDecade ? 'equal' : selectedDecade < dailyDecade ? 'higher' : 'lower',\n  };\n};\n\nconst compareGenres = (selectedGenres: string[] | undefined, dailyGenres: string[] | undefined): ComparisonResult[ComparisonKey.Genre] => {\n  const safeSelectedGenres = selectedGenres || [];\n  const safeDailyGenres = dailyGenres || [];\n\n  return {\n    result: similarGenres(safeSelectedGenres, safeDailyGenres) >= GENRE_SIMILARITIES,\n    message: safeSelectedGenres.length ? `Genres: ${safeSelectedGenres.join(', ')}` : 'No Data',\n    selectedValue: safeSelectedGenres,\n    dailyValue: safeDailyGenres,\n  };\n};\n\nconst comparePopularity = (selectedPopularity: number, dailyPopularity: number): ComparisonResult[ComparisonKey.Popularity] => ({\n  result: Math.abs(selectedPopularity - dailyPopularity) <= POPULARITY_THRESHOLD,\n  message: Math.abs(selectedPopularity - dailyPopularity) <= POPULARITY_THRESHOLD ? 'Similar popularity' : selectedPopularity > dailyPopularity ? 'Go less popular' : 'Go more popular',\n  selectedValue: selectedPopularity,\n  dailyValue: dailyPopularity,\n  comparison: selectedPopularity === dailyPopularity ? 'equal' : selectedPopularity < dailyPopularity ? 'higher' : 'lower',\n});\n\nconst compareDuration = (selectedDuration: number, dailyDuration: number): ComparisonResult[ComparisonKey.Duration] => {\n  const diff = selectedDuration - dailyDuration;\n  const selectedMinSec = formatDuration(selectedDuration);\n  return {\n    result: Math.abs(diff) <= DURATION_THRESHOLD_MS,\n    message: Math.abs(diff) <= DURATION_THRESHOLD_MS ? `Equal duration (${selectedMinSec})` : diff > 0 ? `Go shorter (${selectedMinSec})` : `Go longer (${selectedMinSec})`,\n    selectedValue: formatDuration(selectedDuration),\n    dailyValue: formatDuration(dailyDuration),\n    comparison: selectedDuration === dailyDuration ? 'equal' : selectedDuration < dailyDuration ? 'higher' : 'lower',\n  };\n};\n\nexport const truncateGenres = (genres: string, limit: number = 2) => {\n  const genreList = genres.split(' ');\n  if (genreList.length <= limit) return genres;\n  return `${genreList.slice(0, limit).join(' ')} ...`;\n};\n\nfunction findCommonElements2<T>(arr1: T[], arr2: T[]): T[] {\n  const set = new Set(arr1);\n  return arr2.filter(item => set.has(item));\n}\n\nexport const getDetailedSongComparison = async (\n  selectedSong: any & { artists: []; album: any },\n  dailySong: any,\n): Promise<ComparisonResult> => {\n  const selectedYear = new Date(selectedSong.album.release_date || '').getFullYear();\n  const dailyYear = new Date(dailySong.album.release_date || '').getFullYear();\n\n  // Assuming we don't have country information, we'll keep it as unknown\n  let selectedSongArtists = selectedSong.artists.flatMap(a => a.name);\n  let dailySongArtists = dailySong.artists.flatMap(a => a.name);\n  const selectedArtistCountry = []//await getArtistsCountries(selectedSongArtists);\n  const dailyArtistCountry = []//await getArtistsCountries(dailySongArtists);\n  console.log(\"COUNTRIES:\", dailySongArtists, selectedSongArtists);\n  return {\n    [ComparisonKey.Artist]: compareArtists(selectedSong.artists, dailySong.artists),\n    [ComparisonKey.Album]: compareAlbums(selectedSong.album, dailySong.album),\n    [ComparisonKey.Year]: compareYears(selectedYear, dailyYear),\n    [ComparisonKey.Decade]: compareDecades(selectedYear, dailyYear),\n    [ComparisonKey.Genre]: compareGenres(selectedSong.Genres, dailySong.genres),\n    [ComparisonKey.Popularity]: comparePopularity(selectedSong.popularity!, dailySong.popularity!),\n    [ComparisonKey.Duration]: compareDuration(selectedSong.duration_ms, dailySong.duration_ms),\n    [ComparisonKey.ArtistCountry]: {\n      result: findCommonElements2(selectedArtistCountry, dailyArtistCountry),\n      message: `Artist from ${selectedArtistCountry}`,\n      selectedValue: selectedArtistCountry,\n      dailyValue: dailyArtistCountry,\n    },\n  };\n};\n\nexport const isCorrectGuess = (selectedSong: any, dailySong: any): boolean => {\n  if (selectedSong.id === dailySong.id) return true;\n  const nameMatch = selectedSong.name.toLowerCase() === dailySong.name.toLowerCase();\n  const artistMatch = selectedSong.artists.some((artist) =>\n    dailySong.artists.some((dailyArtist) => dailyArtist.name.toLowerCase() === artist.name.toLowerCase())\n  );\n  const durationMatch = Math.abs(selectedSong.duration_ms - dailySong.duration) <= DURATION_THRESHOLD_MS;\n  const albumMatch = selectedSong.album.name.toLowerCase() === dailySong.album.name.toLowerCase();\n\n  return nameMatch && artistMatch && albumMatch && durationMatch;\n  // return nameMatch && artistMatch;\n};"],"names":[],"mappings":"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"}},
    {"offset": {"line": 384, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 390, "column": 0}, "map": {"version":3,"sources":["file:///home/berry/Development/song-of-the-day/src/app/_components/main/songComparisonTable.tsx"],"sourcesContent":["import React, { useState, useMemo, useCallback } from 'react';\nimport {\n  Flag, Disc, Calendar, Clock, BarChart2,\n  Tag, Music, CheckCircle2, Check,\n  ArrowUp, ArrowDown, Minus, TrendingUp,\n  ChevronDown, ChevronUp, ExternalLink,\n  PersonStanding\n} from 'lucide-react';\nimport { ComparisonKey, ComparisonResult } from '~/utils/gameUtils';\n\ninterface SongComparisonTableProps {\n  gameState: any | null;\n  dailySong: any | null;\n}\n\nconst SongComparisonTable: React.FC<SongComparisonTableProps> = ({ gameState, dailySong }) => {\n  if (!gameState || !dailySong) return null;\n\n  const comparisonKeys = Object.values(ComparisonKey);\n\n  const commonAttributes = useMemo(() => {\n    if (gameState.pickedSongs.length === 0 || !gameState.pickedSongs[0]?.comparison) return {};\n\n    return comparisonKeys.reduce((acc, key) => {\n      const correctValues = gameState.pickedSongs\n        .map(song => song.comparison[key])\n        .filter(value => value.result)\n        .map(value => value.dailyValue);\n\n      if (correctValues.length > 0) {\n        if (Array.isArray(correctValues[0])) {\n          // For array values (like genres), find the intersection\n          const intersection = correctValues.reduce((a, b) =>\n            a.filter(value => b.includes(value))\n          );\n          if (intersection.length > 0) {\n            acc[key] = intersection;\n          }\n        } else if (new Set(correctValues).size === 1) {\n          // For single values, use the common value if all are the same\n          acc[key] = correctValues[0];\n        }\n      }\n      return acc;\n    }, {} as Partial<Record<ComparisonKey, string | string[]>>);\n  }, [gameState, comparisonKeys]);\n\n  const latestComparisonData = useMemo(() => {\n    return gameState.pickedSongs.length > 0 ? gameState.pickedSongs[gameState.pickedSongs.length - 1].comparison : null;\n  }, [gameState]);\n  return (\n    <div className=\"container mx-auto mb-4\">\n      <div className=\"bg-white rounded-xl shadow-md p-3\">\n        <MysteryRow\n          comparisonKeys={comparisonKeys}\n          commonAttributes={commonAttributes}\n          dailySong={dailySong}\n          isFound={gameState.dailySongFound}\n          latestComparisonData={latestComparisonData}\n        />\n        {gameState.pickedSongs.map((song, index) => (\n          <MemoizedSongRow\n            key={song.id}\n            song={song}\n            comparisonKeys={comparisonKeys}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst MysteryRow: React.FC<{\n  comparisonKeys: ComparisonKey[],\n  commonAttributes: Partial<Record<ComparisonKey, string | string[]>>,\n  dailySong: Song,\n  isFound: boolean,\n  latestComparisonData: Record<ComparisonKey, ComparisonResult> | null\n}> = React.memo(({ comparisonKeys, commonAttributes, dailySong, isFound, latestComparisonData }) => (\n  <div className=\"mb-3 p-3 bg-gradient-to-r from-purple-600 to-indigo-600 text-white rounded-lg\">\n    {isFound ? (\n      <RevealedSong\n        dailySong={dailySong}\n        comparisonKeys={comparisonKeys}\n        latestComparisonData={latestComparisonData}\n      />\n    ) : (\n      <MysteryContent comparisonKeys={comparisonKeys} commonAttributes={commonAttributes} />\n    )}\n  </div>\n));\n\nconst RevealedSong: React.FC<{\n  dailySong: Song,\n  comparisonKeys: ComparisonKey[],\n  latestComparisonData: Record<ComparisonKey, ComparisonResult> | null\n}> = ({ dailySong, comparisonKeys, latestComparisonData }) => (\n  <div className=\"text-white\">\n    <h3 className=\"text-2xl font-bold mb-4\">Today's Song Revealed!</h3>\n    <div className=\"flex flex-col md:flex-row items-center md:items-start mb-6\">\n      <img\n        src={dailySong.album.images[0]?.url}\n        alt={dailySong.name}\n        className=\"w-48 h-48 rounded-lg shadow-lg mb-4 md:mb-0 md:mr-6\"\n      />\n      <div className=\"text-center md:text-left\">\n        <h4 className=\"text-xl font-semibold mb-2\">{dailySong.name}</h4>\n        <p className=\"text-lg mb-1\">{dailySong.artists.map((a: any) => a.name).join(', ')}</p>\n        <p className=\"text-md mb-2\">\n          <span className=\"font-medium\">Album:</span> {dailySong.album.name}\n        </p>\n        <p className=\"text-sm mb-3\">\n          <span className=\"font-medium\">Released:</span> {new Date(dailySong.album.release_date).getFullYear()}\n        </p>\n        <a\n          href={dailySong.external_urls.spotify}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"inline-flex items-center px-4 py-2 bg-green-500 text-white rounded-full hover:bg-green-600 transition-colors duration-200\"\n        >\n          <Music className=\"mr-2\" size={18} />\n          Listen on Spotify\n          <ExternalLink className=\"ml-1\" size={14} />\n        </a>\n      </div>\n    </div>\n    <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\n      {comparisonKeys.map((key) => (\n        <div key={key} className=\"bg-white bg-opacity-10 p-3 rounded-lg\">\n          <div className=\"flex items-center mb-1 text-green-300\">\n            {getComparisonIcon(key)}\n            <span className=\"ml-2 font-semibold\">{key}</span>\n          </div>\n          <div className=\"text-white font-medium\">\n            {latestComparisonData && latestComparisonData[key]\n              ? formatValue(latestComparisonData[key].dailyValue, key)\n              : formatValue(dailySong[key.toLowerCase() as keyof Song], key)}\n          </div>\n        </div>\n      ))}\n    </div>\n  </div>\n);\n\nconst MysteryContent: React.FC<{\n  comparisonKeys: ComparisonKey[],\n  commonAttributes: Partial<Record<ComparisonKey, string | string[]>>\n}> = ({ comparisonKeys, commonAttributes }) => (\n  <div>\n    <div className=\"flex items-center mb-2\">\n      <Music size={18} className=\"mr-2\" />\n      <span className=\"font-semibold text-base\">Mystery Song</span>\n    </div>\n    <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-2 text-sm\">\n      {comparisonKeys.map((key) => (\n        <div key={key} className=\"flex items-center\">\n          {getComparisonIcon(key)}\n          <span className=\"ml-1 mr-1 font-bold\">{key}:</span>\n          <span className=\"ml-auto\">\n            {commonAttributes[key] ? (\n              <span className=\"text-green-300 font-semibold glow\">{formatValue(commonAttributes[key])}</span>\n            ) : (\n              <span className=\"text-red-400 font-semibold\">Hidden</span>\n            )}\n          </span>\n        </div>\n      ))}\n    </div>\n  </div>\n);\n\nconst SongRow: React.FC<{\n  song: any & { comparison: ComparisonResult },\n  comparisonKeys: ComparisonKey[],\n}> = ({ song, comparisonKeys }) => {\n  const [expandedValues, setExpandedValues] = useState<Record<string, boolean>>({});\n\n  const toggleExpand = useCallback((key: string) => {\n    setExpandedValues(prev => ({ ...prev, [key]: !prev[key] }));\n  }, []);\n\n  return (\n    <div className=\"mb-3 p-3 bg-gray-100 rounded-lg transition-colors duration-300 hover:bg-gray-200\">\n      {/* <div className=\"flex items-center mb-2\">\n        <img\n          src={song.album.images[0]?.url}\n          alt={`${song.name} cover`}\n          className=\"w-10 h-10 object-cover rounded-md shadow-sm mr-2\"\n        />\n        <span className=\"font-medium text-sm truncate\">{song.name}</span>\n      </div>\n      <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-2 text-xs\">\n        {comparisonKeys.map((key) => (\n          <div key={key} className=\"flex items-center\">\n            {getComparisonIcon(key)}\n            <span className=\"ml-1 mr-1 font-bold\">{key}:</span>\n            <div className=\"ml-auto flex items-center\">\n              {getComparisonResult(key, song.comparison[key])}\n              <span className=\"ml-1\">\n                <ArrayValueDisplay\n                  values={Array.isArray(song.comparison[key].selectedValue)\n                    ? song.comparison[key].selectedValue\n                    : [song.comparison[key].selectedValue]}\n                  isExpanded={expandedValues[key]}\n                  toggleExpand={() => toggleExpand(key)}\n                  isCorrect={song.comparison[key].result}\n                />\n              </span>\n            </div>\n          </div>\n        ))}\n      </div> */}\n    </div>\n  );\n};\n\nconst MemoizedSongRow = React.memo(SongRow);\n\nconst ArrayValueDisplay: React.FC<{\n  values: string[],\n  isExpanded: boolean,\n  toggleExpand: () => void,\n  isCorrect: boolean\n}> = React.memo(({ values, isExpanded, toggleExpand, isCorrect }) => {\n  const displayValues = isExpanded ? values : [values[0]];\n\n  return (\n    <div className=\"flex flex-wrap items-center\">\n      {displayValues.map((value, index) => (\n        <span key={index} className={`mr-1 mb-1 ${\n          isCorrect ? 'text-green-600' : 'text-red-600'\n        } font-medium`}>\n          {value}\n        </span>\n      ))}\n      {values.length > 1 && (\n        <button\n          onClick={toggleExpand}\n          className=\"text-indigo-600 hover:text-indigo-800 ml-1\"\n        >\n          {isExpanded ? <ChevronUp size={12} /> : <ChevronDown size={12} />}\n          {isExpanded ? 'Less' : `+${values.length - 1}`}\n        </button>\n      )}\n    </div>\n  );\n});\n\n\nconst getComparisonIcon = (key: ComparisonKey): React.ReactNode => {\n  const icons: Record<ComparisonKey, React.ReactNode> = {\n    [ComparisonKey.Artist]: <PersonStanding size={16} />,\n    [ComparisonKey.Album]: <Disc size={16} />,\n    [ComparisonKey.Year]: <Calendar size={16} />,\n    [ComparisonKey.Decade]: <TrendingUp size={16} />,\n    [ComparisonKey.Genre]: <Tag size={16} />,\n    [ComparisonKey.Popularity]: <BarChart2 size={16} />,\n    [ComparisonKey.Duration]: <Clock size={16} />,\n    [ComparisonKey.ArtistCountry]: <Flag size={16} />,\n  };\n  return icons[key] || null;\n};\n\nconst getComparisonResult = (key: ComparisonKey, value: ComparisonResult[ComparisonKey]): React.ReactNode => {\n  if (!value || value.result) {\n    return <Check className=\"text-green-500\" size={16} />;\n  }\n  const comparisonIcons = {\n    higher: <ArrowUp className=\"text-red-500\" size={16} />,\n    lower: <ArrowDown className=\"text-red-500\" size={16} />,\n  };\n  if ([ComparisonKey.Year, ComparisonKey.Decade, ComparisonKey.Popularity, ComparisonKey.Duration].includes(key)) {\n    return comparisonIcons[value.comparison as keyof typeof comparisonIcons] || <Minus className=\"text-red-500\" size={16} />;\n  }\n  return <Minus className=\"text-red-500\" size={12} />;\n};\n\nconst formatValue = (value: any, key: ComparisonKey): string => {\n  if (Array.isArray(value)) {\n    return value.map(item => formatValue(item, key)).join(', ');\n  }\n  if (typeof value === 'object' && value !== null) {\n    if ('name' in value) return value.name;\n    if ('url' in value) return value.url;\n    return JSON.stringify(value);\n  }\n  if (typeof value === 'boolean') {\n    return value ? 'Yes' : 'No';\n  }\n  if (typeof value === 'number') {\n    if (key === ComparisonKey.Duration) {\n      const minutes = Math.floor(value / 60000);\n      const seconds = ((value % 60000) / 1000).toFixed(0);\n      return `${minutes}:${seconds.padStart(2, '0')}`;\n    }\n    if (key === ComparisonKey.Popularity) {\n      return `${value}%`;\n    }\n  }\n  return value?.toString() || 'N/A';\n};\n\n\nexport default React.memo(SongComparisonTable);\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 959, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 965, "column": 0}, "map": {"version":3,"sources":["file:///home/berry/Development/song-of-the-day/src/app/main/page.tsx"],"sourcesContent":["\"use client\"\n\nimport React, { useState, useEffect } from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faSearch, faSpinner, faTimes, faCheck, faXmark, faArrowDown, faArrowUp, faMoon, faSun } from \"@fortawesome/free-solid-svg-icons\"\nimport GuessCard from \"src/app/_components/main/guessCard\"\nimport Header from \"src/app/_components/main/header\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Card, CardContent } from \"@/components/ui/card\"\nimport { Tabs, TabsList, TabsTrigger, TabsContent } from \"@/components/ui/tabs\"\nimport { Music, Play, Users, Award, Headphones, Zap } from \"lucide-react\"\nimport Link from \"next/link\"\nimport Image from \"next/image\"\nimport SongComparisonTable from \"../_components/main/songComparisonTable\"\n\nexport default function MainPage() {\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [isSearching, setIsSearching] = useState(false)\n  const [dropdownVisible, setDropdownVisible] = useState(false)\n  const [searchResults, setSearchResults] = useState([])\n  const [gameState, setGameState] = useState({\n    dailySongFound: false,\n    guesses: []\n  })\n  const [dailySong, setDailySong] = useState(null)\n\n  const handleSearch = (value: string) => {\n    setSearchTerm(value)\n    setIsSearching(true)\n    // Implement search logic here\n  }\n\n  const handleDDSelect = (song: any) => {\n    // Implement song selection logic\n  }\n\n  const handleFocus = () => {\n    setDropdownVisible(true)\n  }\n\n  const handleBlur = () => {\n    setTimeout(() => setDropdownVisible(false), 200)\n  }\n\n  return (\n    <main className=\"flex min-h-screen flex-col bg-gradient-to-b from-sky-400 to-indigo-800 dark:from-gray-900 dark:to-indigo-900\">\n      <Header />\n      \n      <div className=\"flex flex-1 flex-col items-center justify-start gap-8 px-4 py-8\">\n        <Tabs defaultValue=\"daily\" className=\"w-full max-w-4xl\">\n          <TabsList className=\"grid w-full grid-cols-3 mb-8\">\n            <TabsTrigger value=\"daily\">Daily Challenge</TabsTrigger>\n            <TabsTrigger value=\"modes\">Game Modes</TabsTrigger>\n            <TabsTrigger value=\"multiplayer\">Multiplayer</TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"daily\" className=\"mt-6\">\n            <div className=\"mt-6\">\n              <div className=\"relative\">\n                <Input\n                  type=\"text\"\n                  placeholder={gameState?.dailySongFound ? \"Today's song found!\" : \"Search by artist or title\"}\n                  value={searchTerm}\n                  onChange={(e) => handleSearch(e.target.value)}\n                  onFocus={handleFocus}\n                  onBlur={handleBlur}\n                  disabled={gameState?.dailySongFound}\n                  className={`h-12 w-full rounded-full pl-12 pr-4 text-base transition-all duration-300 ease-in-out ${\n                    gameState?.dailySongFound\n                      ? \"cursor-not-allowed border-gray-300 bg-gray-100 text-gray-400 dark:border-gray-600 dark:bg-gray-700 dark:text-gray-400\"\n                      : \"border-indigo-300 bg-white text-gray-800 shadow-md hover:shadow-lg focus:border-indigo-500 focus:shadow-lg dark:border-indigo-600 dark:bg-gray-800 dark:text-white\"\n                  }`}\n                />\n                <FontAwesomeIcon\n                  icon={faSearch}\n                  className={`pointer-events-none absolute left-4 top-1/2 -translate-y-1/2 text-xl ${\n                    gameState?.dailySongFound ? \"text-gray-400\" : \"text-indigo-500 dark:text-indigo-400\"\n                  }`}\n                />\n                {!gameState?.dailySongFound && searchTerm && (\n                  <button\n                    type=\"button\"\n                    onClick={() => setSearchTerm(\"\")}\n                    className=\"absolute inset-y-0 right-0 flex items-center pr-4 text-gray-400 hover:text-gray-600 dark:text-gray-300 dark:hover:text-gray-100\"\n                  >\n                    <FontAwesomeIcon icon={faTimes} className=\"text-lg\" />\n                  </button>\n                )}\n              </div>\n            </div>\n\n            {dropdownVisible && searchTerm && (\n              <Card className=\"absolute z-50 mt-1 w-full max-h-60 overflow-auto\">\n                <CardContent className=\"p-0\">\n                  {isSearching ? (\n                    <div className=\"p-4 text-center\">\n                      <FontAwesomeIcon icon={faSpinner} spin /> Searching...\n                    </div>\n                  ) : searchResults.length > 0 ? (\n                    <ul className=\"divide-y dark:divide-gray-700\">\n                      {searchResults.map((song: any) => (\n                        <li\n                          key={song.id}\n                          className=\"flex cursor-pointer items-center p-4 hover:bg-gray-50 dark:hover:bg-gray-800\"\n                          onClick={() => handleDDSelect(song)}\n                        >\n                          <div>\n                            <p className=\"font-medium\">{song.name}</p>\n                            <p className=\"text-sm text-gray-500 dark:text-gray-400\">{song.artists[0].name}</p>\n                          </div>\n                        </li>\n                      ))}\n                    </ul>\n                  ) : (\n                    <div className=\"p-4 text-center text-gray-500 dark:text-gray-400\">No results found</div>\n                  )}\n                </CardContent>\n              </Card>\n            )}\n\n            <Card className=\"z-50 mt-1 overflow-auto\">\n              <SongComparisonTable gameState={gameState} dailySong={dailySong} />\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"modes\">\n            <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\n              <Card>\n                <CardContent className=\"flex flex-col items-center space-y-4 p-6\">\n                  <Headphones className=\"h-12 w-12 text-purple-600 dark:text-purple-400\" />\n                  <h2 className=\"text-2xl font-bold\">Classic Mode</h2>\n                  <p className=\"text-center text-gray-600 dark:text-gray-300\">\n                    Guess the song from a short audio clip. Test your ear for music!\n                  </p>\n                  <Button>Play Classic</Button>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardContent className=\"flex flex-col items-center space-y-4 p-6\">\n                  <Zap className=\"h-12 w-12 text-yellow-500\" />\n                  <h2 className=\"text-2xl font-bold\">Lightning Round</h2>\n                  <p className=\"text-center text-gray-600 dark:text-gray-300\">\n                    Rapid-fire questions. How many can you answer in 60 seconds?\n                  </p>\n                  <Button>Start Lightning Round</Button>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardContent className=\"flex flex-col items-center space-y-4 p-6\">\n                  <Award className=\"h-12 w-12 text-green-500\" />\n                  <h2 className=\"text-2xl font-bold\">Genre Master</h2>\n                  <p className=\"text-center text-gray-600 dark:text-gray-300\">\n                    Specialized quizzes for different music genres. Prove your expertise!\n                  </p>\n                  <Button>Choose Genre</Button>\n                </CardContent>\n              </Card>\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"multiplayer\">\n            <Card>\n              <CardContent className=\"flex flex-col items-center space-y-4 p-6\">\n                <Users className=\"h-12 w-12 text-purple-600 dark:text-purple-400\" />\n                <h2 className=\"text-2xl font-bold\">Multiplayer Mode</h2>\n                <p className=\"text-center text-gray-600 dark:text-gray-300\">\n                  Challenge your friends in real-time! Create a room or join an existing one to compete.\n                </p>\n                <div className=\"flex flex-col sm:flex-row gap-4\">\n                  <Button>Create Room</Button>\n                  <Button variant=\"outline\">Join Room</Button>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n        </Tabs>\n      </div>\n\n      <section className=\"bg-white dark:bg-gray-800 py-12 md:py-24\">\n        <div className=\"container mx-auto px-4\">\n          <h2 className=\"mb-8 text-center text-3xl font-bold dark:text-white\">Features</h2>\n          <div className=\"grid gap-8 md:grid-cols-3\">\n            <Card>\n              <CardContent className=\"flex flex-col items-center p-6 text-center\">\n                <Play className=\"mb-4 h-12 w-12 text-indigo-500 dark:text-indigo-400\" />\n                <h3 className=\"mb-2 text-xl font-semibold\">Daily Challenges</h3>\n                <p className=\"text-gray-600 dark:text-gray-300\">New song to guess every day. How fast can you identify it?</p>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardContent className=\"flex flex-col items-center p-6 text-center\">\n                <Users className=\"mb-4 h-12 w-12 text-indigo-500 dark:text-indigo-400\" />\n                <h3 className=\"mb-2 text-xl font-semibold\">Multiplayer Mode</h3>\n                <p className=\"text-gray-600 dark:text-gray-300\">Compete with friends in real-time. Who's the fastest music guru?</p>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardContent className=\"flex flex-col items-center p-6 text-center\">\n                <Award className=\"mb-4 h-12 w-12 text-indigo-500 dark:text-indigo-400\" />\n                <h3 className=\"mb-2 text-xl font-semibold\">Diverse Quizzes</h3>\n                <p className=\"text-gray-600 dark:text-gray-300\">From pop to classical, test your knowledge across all genres.</p>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      <footer className=\"border-t bg-white/10 py-6 dark:bg-gray-800/10\">\n        <div className=\"container mx-auto flex flex-col items-center justify-between px-4 text-white sm:flex-row\">\n          <p className=\"text-sm\">© 2024 MusicMaestro. All rights reserved.</p>\n          <nav className=\"mt-4 flex gap-4 sm:mt-0\">\n            <Link href=\"#\" className=\"text-sm hover:underline\">\n              Terms of Service\n            </Link>\n            <Link href=\"#\" className=\"text-sm hover:underline\">\n              Privacy Policy\n            </Link>\n          </nav>\n        </div>\n      </footer>\n    </main>\n  )\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1661, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}
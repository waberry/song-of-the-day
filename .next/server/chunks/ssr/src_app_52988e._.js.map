{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/berry/Development/song-of-the-day/src/app/_components/modes.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport { useQueryClient } from \"@tanstack/react-query\";\nimport { api } from \"~/trpc/react\";\nimport type { RouterOutputs } from \"~/trpc/react\";\nimport { type TRPCClientErrorLike } from \"@trpc/client\";\nimport { type AppRouter } from \"~/server/api/root\";\n\nimport { Card, CardContent } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Award, Headphones, Zap } from \"lucide-react\"\n\nexport function Modes() {\n  const [modes] = api.mode.getModes.useSuspenseQuery();\n  const queryClient = useQueryClient();\n\n  const [playlistId, setPlaylistId] = React.useState(\"\");\n  const createMode = api.mode.createMode.useMutation({\n    onSettled(\n      data: RouterOutputs[\"mode\"][\"createMode\"] | undefined,\n      error: TRPCClientErrorLike<AppRouter> | null,\n      variables: { playlistId: string },\n      context: unknown\n    ) {\n      queryClient.invalidateQueries({ queryKey: ['mode.getModes'] });\n    }\n  });\n\n  return (\n    <div className=\"w-full max-w-xs\">\n      {modes ? (\n        <ul>\n          {modes.map((mode) => (\n            <li key={mode.id} className=\"\">\n              mode name : {mode.name} (Playlist ID: {mode.playlistId}) modeid {mode.id}\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>You have no modes</p>\n      )}\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          createMode.mutate({ playlistId: playlistId });\n        }}\n        className=\"flex flex-col gap-2\"\n      >\n                <input\n          type=\"text\"\n          placeholder=\"Playlist ID\"\n          value={playlistId}\n          onChange={(e) => setPlaylistId(e.target.value)}\n          className=\"w-full rounded-full px-4 py-2 text-black\"\n        />\n        <button\n          type=\"submit\"\n          className=\"rounded-full bg-white/10 px-10 py-3 font-semibold transition hover:bg-white/20\"\n          disabled={createMode.isPending}\n        >\n          {createMode.isPending ? \"Submitting...\" : \"Submit\"}\n        </button>\n      </form>\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAEA;AAEA;AADA;AAHA;;;;;AAaO,SAAS;IACd,MAAM,CAAC,MAAM,GAAG,qHAAA,CAAA,MAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB;IAClD,MAAM,cAAc,CAAA,GAAA,sLAAA,CAAA,iBAAc,AAAD;IAEjC,MAAM,CAAC,YAAY,cAAc,GAAG,sMAAM,QAAQ,CAAC;IACnD,MAAM,aAAa,qHAAA,CAAA,MAAG,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC;QACjD,WACE,IAAqD,EACrD,KAA4C,EAC5C,SAAiC,EACjC,OAAgB;YAEhB,YAAY,iBAAiB,CAAC;gBAAE,UAAU;oBAAC;iBAAgB;YAAC;QAC9D;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;YACZ,sBACC,8OAAC;0BACE,MAAM,GAAG,CAAC,CAAC,qBACV,8OAAC;wBAAiB,WAAU;;4BAAG;4BAChB,KAAK,IAAI;4BAAC;4BAAgB,KAAK,UAAU;4BAAC;4BAAU,KAAK,EAAE;;uBADjE,KAAK,EAAE;;;;;;;;;qCAMpB,8OAAC;0BAAE;;;;;;0BAEL,8OAAC;gBACC,UAAU,CAAC;oBACT,EAAE,cAAc;oBAChB,WAAW,MAAM,CAAC;wBAAE,YAAY;oBAAW;gBAC7C;gBACA,WAAU;;kCAEF,8OAAC;wBACP,MAAK;wBACL,aAAY;wBACZ,OAAO;wBACP,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;wBAC7C,WAAU;;;;;;kCAEZ,8OAAC;wBACC,MAAK;wBACL,WAAU;wBACV,UAAU,WAAW,SAAS;kCAE7B,WAAW,SAAS,GAAG,kBAAkB;;;;;;;;;;;;;;;;;;AAKpD"}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/berry/Development/song-of-the-day/src/app/modes/page.tsx"],"sourcesContent":["\"use client\"\n\nimport React, { useState, useEffect } from \"react\"\nimport { Modes } from \"../_components/modes\";\n\n\nexport default function LandingPage() {\n\n    return (\n        <Modes />\n    );\n}"],"names":[],"mappings":";;;;AAGA;AAHA;;;AAMe,SAAS;IAEpB,qBACI,8OAAC,mIAAA,CAAA,QAAK;;;;;AAEd"}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}
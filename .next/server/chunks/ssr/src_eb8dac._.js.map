{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/berry/Development/song-of-the-day/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///home/berry/Development/song-of-the-day/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,sMAAM,UAAU,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file:///home/berry/Development/song-of-the-day/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,sMAAM,UAAU,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":["file:///home/berry/Development/song-of-the-day/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,sMAAM,UAAU,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,sMAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,sMAAM,UAAU,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":["file:///home/berry/Development/song-of-the-day/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE"}},
    {"offset": {"line": 229, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 235, "column": 0}, "map": {"version":3,"sources":["file:///home/berry/Development/song-of-the-day/src/app/classic/page.tsx"],"sourcesContent":["\"use client\"\n\nimport React, { useState, useEffect } from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faSearch, faSpinner, faTimes, faCheck, faXmark, faArrowDown, faArrowUp } from \"@fortawesome/free-solid-svg-icons\"\nimport { Button } from \"src/components/ui/button\"\nimport { Input } from \"src/components/ui/input\"\nimport { Card, CardContent, CardHeader } from \"src/components/ui/card\"\nimport { Badge } from \"src/components/ui/badge\"\nimport { Tabs, TabsList, TabsTrigger, TabsContent } from \"src/components/ui/tabs\"\nimport { Music, Play, Users, Award, Twitter } from \"lucide-react\"\nimport Link from \"next/link\"\nimport Image from \"next/image\"\n\n// Enhanced mock functions\nconst getGameState = async () => ({\n  dailySongFound: false,\n  pickedSongs: [\n    {\n      id: \"1\",\n      name: \"Bohemian Rhapsody\",\n      artists: [{ name: \"Queen\" }],\n      album: { name: \"A Night at the Opera\", images: [{ url: \"/placeholder.svg\" }] },\n      matchStatus: {\n        nameMatch: false,\n        artistMatch: false,\n        yearDiff: 1,\n        genreMatch: true\n      }\n    }\n  ],\n  remainingGuesses: 5\n})\n\nconst getDailySong = async () => ({\n  id: \"daily\",\n  name: \"Daily Song\",\n  artists: [{ name: \"Artist\" }],\n  genre: \"Rock\",\n  year: 1975\n})\n\nconst searchTracks = async (term) => {\n  await new Promise(resolve => setTimeout(resolve, 500))\n  return [\n    { id: \"1\", name: \"Song 1\", artists: [{ name: \"Artist 1\" }], album: { name: \"Album 1\", images: [{ url: \"/placeholder.svg\" }], release_date: \"2023\" }, genre: \"Pop\" },\n    { id: \"2\", name: \"Song 2\", artists: [{ name: \"Artist 2\" }], album: { name: \"Album 2\", images: [{ url: \"/placeholder.svg\" }], release_date: \"2022\" }, genre: \"Rock\" },\n    { id: \"3\", name: \"Song 3\", artists: [{ name: \"Artist 3\" }], album: { name: \"Album 3\", images: [{ url: \"/placeholder.svg\" }], release_date: \"2021\" }, genre: \"Hip-Hop\" },\n  ].filter(song => song.name.toLowerCase().includes(term.toLowerCase()) || song.artists[0].name.toLowerCase().includes(term.toLowerCase()))\n}\n\nconst GuessCard = ({ guess, index }) => {\n  const { matchStatus } = guess\n  return (\n    <Card className=\"mb-4 overflow-hidden\">\n      <CardContent className=\"p-4\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            <span className=\"flex h-8 w-8 items-center justify-center rounded-full bg-indigo-100 text-indigo-800 font-semibold\">\n              {index + 1}\n            </span>\n            <div>\n              <h3 className=\"font-semibold\">{guess.name}</h3>\n              <p className=\"text-sm text-gray-600\">{guess.artists[0].name}</p>\n            </div>\n          </div>\n          <div className=\"flex space-x-2\">\n            <Badge variant={matchStatus.nameMatch ? \"success\" : \"destructive\"}>\n              <FontAwesomeIcon icon={matchStatus.nameMatch ? faCheck : faXmark} className=\"mr-1\" />\n              Title\n            </Badge>\n            <Badge variant={matchStatus.artistMatch ? \"success\" : \"destructive\"}>\n              <FontAwesomeIcon icon={matchStatus.artistMatch ? faCheck : faXmark} className=\"mr-1\" />\n              Artist\n            </Badge>\n            <Badge variant={matchStatus.genreMatch ? \"success\" : \"destructive\"}>\n              <FontAwesomeIcon icon={matchStatus.genreMatch ? faCheck : faXmark} className=\"mr-1\" />\n              Genre\n            </Badge>\n            <Badge variant=\"outline\" className=\"flex items-center\">\n              <FontAwesomeIcon\n                icon={matchStatus.yearDiff > 0 ? faArrowDown : faArrowUp}\n                className=\"mr-1 text-indigo-500\"\n              />\n              {Math.abs(matchStatus.yearDiff)} year{Math.abs(matchStatus.yearDiff) !== 1 ? 's' : ''}\n            </Badge>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n\n// Add interface for search result songs\ninterface SearchResultSong {\n  id: string;\n  name: string;\n  artists: { name: string }[];\n  album: {\n    name: string;\n    images: { url: string }[];\n    release_date: string;\n  };\n  genre: string;\n}\n\n// Add proper typing to ClassicMode component\nexport default function ClassicMode() {\n  const [searchTerm, setSearchTerm] = useState<string>(\"\")\n  const [dropdownVisible, setDropdownVisible] = useState(false)\n  const [gameState, setGameState] = useState(null)\n  const [dailySong, setDailySong] = useState(null)\n  const [isLoading, setIsLoading] = useState(true)\n  const [searchResults, setSearchResults] = useState<SearchResultSong[]>([])\n  const [isSearching, setIsSearching] = useState(false)\n  const [streak, setStreak] = useState(0)\n  const [maxStreak, setMaxStreak] = useState(0)\n  const [remainingGuesses, setRemainingGuesses] = useState(6)\n  const [notification, setNotification] = useState<{\n    type: 'success' | 'error' | null;\n    message: string;\n  }>({ type: null, message: '' });\n  const [selectedIndex, setSelectedIndex] = useState(-1)\n\n  useEffect(() => {\n    async function initializeGameState() {\n      try {\n        setIsLoading(true)\n        const currentGameState = await getGameState()\n        setGameState(currentGameState)\n        const fetchedDailySong = await getDailySong()\n        setDailySong(fetchedDailySong)\n        setIsLoading(false)\n      } catch (err) {\n        console.error(\"Initialization error:\", err)\n        setIsLoading(false)\n      }\n    }\n    initializeGameState()\n  }, [])\n\n  useEffect(() => {\n    if (searchTerm.trim() !== \"\") {\n      setIsSearching(true)\n      const delayDebounceFn = setTimeout(async () => {\n        const results = await searchTracks(searchTerm)\n        setSearchResults(results)\n        setIsSearching(false)\n        setDropdownVisible(true)\n      }, 300)\n      return () => clearTimeout(delayDebounceFn)\n    } else {\n      setDropdownVisible(false)\n      setSearchResults([])\n    }\n  }, [searchTerm])\n\n  const handleSearch = (value: string) => {\n    setSearchTerm(value.toLowerCase())\n  }\n\n  const handleFocus = () => {\n    if (gameState?.dailySongFound) return\n    if (searchTerm.trim() !== \"\") {\n      setDropdownVisible(true)\n    }\n  }\n\n  const handleBlur = () => {\n    setTimeout(() => {\n      setDropdownVisible(false)\n    }, 200)\n  }\n\n  const handleGuess = (selectedSong: SearchResultSong) => {\n    if (remainingGuesses > 0) {\n      setGuesses([selectedSong, ...guesses])\n      setRemainingGuesses(remainingGuesses - 1)\n      setDropdownVisible(false)\n      setSearchTerm(\"\")\n\n      if (selectedSong.name.toLowerCase() === currentSong.name.toLowerCase() &&\n          selectedSong.artists[0].name.toLowerCase() === currentSong.artists[0].name.toLowerCase()) {\n        // Correct guess\n        setStreak(streak + 1)\n        setMaxStreak(Math.max(maxStreak, streak + 1))\n        setNotification({\n          type: 'success',\n          message: 'Correct! Loading next song...'\n        })\n        setTimeout(() => {\n          loadNewSong()\n          setNotification({ type: null, message: '' })\n        }, 2000)\n      } else if (remainingGuesses === 1) {\n        // Last guess and incorrect\n        setStreak(0)\n        setNotification({\n          type: 'error',\n          message: `Game Over! The song was \"${currentSong.name}\" by ${currentSong.artists[0].name}`\n        })\n        setTimeout(() => {\n          loadNewSong()\n          setNotification({ type: null, message: '' })\n        }, 2000)\n      }\n    }\n  }\n\n  const handleSkip = () => {\n    setStreak(0)\n    loadNewSong()\n  }\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (!dropdownVisible || searchResults.length === 0) return\n\n    switch (e.key) {\n      case 'ArrowDown':\n        e.preventDefault()\n        setSelectedIndex(prev => \n          prev < searchResults.length - 1 ? prev + 1 : prev\n        )\n        break\n      case 'ArrowUp':\n        e.preventDefault()\n        setSelectedIndex(prev => prev > 0 ? prev - 1 : prev)\n        break\n      case 'Enter':\n        e.preventDefault()\n        if (selectedIndex >= 0) {\n          handleGuess(searchResults[selectedIndex])\n        }\n        break\n      case 'Escape':\n        setDropdownVisible(false)\n        setSelectedIndex(-1)\n        break\n    }\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"flex min-h-screen items-center justify-center bg-gradient-to-b from-sky-400 to-indigo-800\">\n        <FontAwesomeIcon icon={faSpinner} spin className=\"text-4xl text-white\" />\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"flex min-h-screen\">\n      <div className=\"hidden lg:block w-64\">\n        {/* Ad content */}\n      </div>\n\n      <div className=\"flex-1 max-w-4xl mx-auto px-4 py-8\">\n        {notification.type && (\n          <div className={`fixed top-4 right-4 p-4 rounded-lg shadow-lg transition-all duration-300 ${\n            notification.type === 'success' ? 'bg-green-500' : 'bg-red-500'\n          } text-white`}>\n            {notification.message}\n          </div>\n        )}\n        <Card className=\"mb-6\">\n          <CardHeader>\n            <CardTitle className=\"text-2xl font-bold\">Classic Mode</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"flex justify-between items-center mb-4\">\n              <div className=\"flex items-center\">\n                <FontAwesomeIcon icon={faFire} className=\"text-orange-500 mr-2\" />\n                <span className=\"font-semibold\">Streak: {streak}</span>\n              </div>\n              <div>\n                <span className=\"font-semibold\">Max Streak: {maxStreak}</span>\n              </div>\n            </div>\n            <Progress value={(6 - remainingGuesses) / 6 * 100} className=\"mb-4\" />\n            <p className=\"text-center mb-4\">Guesses remaining: {remainingGuesses}</p>\n            <div className=\"relative w-full max-w-2xl mx-auto\">\n              <Input\n                type=\"text\"\n                placeholder=\"Search by artist or title\"\n                value={searchTerm}\n                onChange={(e) => handleSearch(e.target.value)}\n                onFocus={handleFocus}\n                onBlur={handleBlur}\n                onKeyDown={handleKeyDown}\n                className=\"h-12 w-full rounded-full pl-12 pr-4 text-base transition-all duration-300 ease-in-out border-indigo-300 bg-white text-gray-800 shadow-md hover:shadow-lg focus:border-indigo-500 focus:shadow-lg dark:border-indigo-600 dark:bg-gray-800 dark:text-white sm:text-base md:text-lg\"\n              />\n              <FontAwesomeIcon\n                icon={faSearch}\n                className=\"pointer-events-none absolute left-4 top-1/2 -translate-y-1/2 text-xl text-indigo-500 dark:text-indigo-400\"\n              />\n              {searchTerm && (\n                <button\n                  type=\"button\"\n                  onClick={() => setSearchTerm(\"\")}\n                  className=\"absolute inset-y-0 right-0 flex items-center pr-4 text-gray-400 hover:text-gray-600 dark:text-gray-300 dark:hover:text-gray-100\"\n                >\n                  <FontAwesomeIcon icon={faTimes} className=\"text-lg\" />\n                </button>\n              )}\n            </div>\n\n            {dropdownVisible && searchTerm && (\n              <Card className=\"absolute z-50 mt-1 w-full max-h-60 overflow-auto\">\n                <CardContent className=\"p-0\">\n                  {isSearching ? (\n                    <div className=\"p-4 text-center\">\n                      <FontAwesomeIcon icon={faSpinner} spin /> Searching...\n                    </div>\n                  ) : searchResults.length > 0 ? (\n                    <ul className=\"divide-y dark:divide-gray-700\">\n                      {searchResults.map((song, index) => (\n                        <li\n                          key={song.id}\n                          className={`flex cursor-pointer items-center p-4 hover:bg-gray-50 dark:hover:bg-gray-800 ${\n                            index === selectedIndex ? 'bg-gray-100 dark:bg-gray-700' : ''\n                          }`}\n                          onClick={() => handleGuess(song)}\n                          onMouseEnter={() => setSelectedIndex(index)}\n                        >\n                          <div>\n                            <p className=\"font-medium\">{song.name}</p>\n                            <p className=\"text-sm text-gray-500 dark:text-gray-400\">{song.artists[0].name}</p>\n                          </div>\n                        </li>\n                      ))}\n                    </ul>\n                  ) : (\n                    <div className=\"p-4 text-center text-gray-500 dark:text-gray-400\">No results found</div>\n                  )}\n                </CardContent>\n              </Card>\n            )}\n          </CardContent>\n        </Card>\n\n        <Card className=\"mb-6 bg-purple-600 text-white dark:bg-purple-800\">\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center gap-4\">\n              <Music className=\"h-6 w-6\" />\n              <h2 className=\"text-xl font-semibold\">Mystery Song</h2>\n            </div>\n            <div className=\"mt-4 grid gap-4 sm:grid-cols-2\">\n              <div className=\"flex items-center justify-between\">\n                <span>Artists:</span>\n                <span className=\"text-purple-300 dark:text-purple-200\">Hidden</span>\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <span>Genre:</span>\n                <span className=\"text-purple-300 dark:text-purple-200\">Hidden</span>\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <span>Year:</span>\n                <span className=\"text-purple-300 dark:text-purple-200\">Hidden</span>\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <span>Decade:</span>\n                <span className=\"text-purple-300 dark:text-purple-200\">{Math.floor(currentSong.year / 10) * 10}s</span>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {guesses.length > 0 && (\n          <Card className=\"mb-6\">\n            <CardHeader>\n              <CardTitle>Your Guesses</CardTitle>\n            </CardHeader>\n            <CardContent className=\"p-4\">\n              <div className=\"space-y-4\">\n                {guesses.map((guess, index) => (\n                  <GuessCard key={index} guess={guess} currentSong={currentSong} />\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        )}\n\n        <div className=\"flex justify-center space-x-4\">\n          <Button onClick={handleSkip} variant=\"outline\" className=\"flex items-center\">\n            <SkipForward className=\"mr-2 h-4 w-4\" />\n            Skip Song\n          </Button>\n          <Button onClick={loadNewSong} className=\"flex items-center\">\n            <Play className=\"mr-2 h-4 w-4\" />\n            New Song\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"hidden lg:block w-64\">\n        {/* Ad content */}\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1170, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}